# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Train
        run: python app/classification_train.py
      - name: Evaluation
        uses: iterative/setup-cml@v2
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Model Metrics" > report.md
          cat static/misc/metrics.txt >> report.md

          echo '## Confusion Matrix Plot' >> report.md
          echo '![Confusion Matrix](static/misc/conf_matrix.png)' >> report.md

          cml comment create report.md
      - name: Upload Artifacts
        id: artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model
          path: static/**/*
          compression-level: 0
          overwrite: true
      - name: Storing Artifact Urls
        run: echo '${{ steps.artifacts.outputs.artifact-url }}' > artifacts_path.txt
      - name: Commiting Artifact Urls
        run: |
          git config --local user.email "test@github.com"
          git config --local user.name "GitHub Action test"
          git add artifacts_path.txt
          git commit -m "Adding artifact urls"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.head_ref || github.ref_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true


